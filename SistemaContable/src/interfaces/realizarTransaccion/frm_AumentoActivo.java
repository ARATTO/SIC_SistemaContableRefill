
package interfaces.realizarTransaccion;

import conexion.Conexion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import sistemacontable.Cuenta;
import sistemacontable.SistemaContable;

/**
 * @author Dario
 */
public class frm_AumentoActivo extends javax.swing.JInternalFrame {

    private Cuenta cuenta;
    ArrayList<Cuenta> formaPago = new ArrayList<Cuenta>();
    
    public void enviarCuenta(Cuenta cuenta){
        this.cuenta = cuenta;
    }
    public frm_AumentoActivo() {
        initComponents();
        llenarCmbFormaPago();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_frmAumentoActivo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmb_tipoPagoAumentoActivo = new javax.swing.JComboBox();
        txt_cantidadAumentoActivo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_descripcionAumentoActivo = new javax.swing.JTextArea();

        setClosable(true);
        setIconifiable(true);
        setTitle("Aumento Activo");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_frmAumentoActivo.setText("Aceptar");
        btn_frmAumentoActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_frmAumentoActivoActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo de Pago:");

        jLabel2.setText("Cantidad:");

        jLabel3.setText("Descipcion:");

        txt_cantidadAumentoActivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cantidadAumentoActivoKeyTyped(evt);
            }
        });

        txt_descripcionAumentoActivo.setColumns(20);
        txt_descripcionAumentoActivo.setRows(5);
        jScrollPane2.setViewportView(txt_descripcionAumentoActivo);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_frmAumentoActivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 93, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1))
                    .addGap(29, 29, 29)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cmb_tipoPagoAumentoActivo, javax.swing.GroupLayout.Alignment.LEADING, 0, 116, Short.MAX_VALUE)
                        .addComponent(txt_cantidadAumentoActivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                    .addGap(0, 183, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_frmAumentoActivo)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cmb_tipoPagoAumentoActivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(29, 29, 29)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txt_cantidadAumentoActivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(32, 32, 32)
                    .addComponent(jLabel3)
                    .addContainerGap(134, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_frmAumentoActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_frmAumentoActivoActionPerformed
        try {
            //Logica aqui
            SistemaContable sistema = new SistemaContable();
            String pago = obtenerCodigoFormaPago();
            
            sistema.AumentoActivos(cuenta, txt_cantidadAumentoActivo.getText(), pago, 1);
            
            JOptionPane.showMessageDialog(this, "Transacción Exitosa");
            limpiarForm();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrio un problema al momentos de Realizar la transacción");
        }
        
        limpiarForm();
    }//GEN-LAST:event_btn_frmAumentoActivoActionPerformed

    private void txt_cantidadAumentoActivoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantidadAumentoActivoKeyTyped
        char car = evt.getKeyChar();
        if( car<'0' || car>'9'){
            if(car!='.'){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_cantidadAumentoActivoKeyTyped
    void limpiarForm(){
        txt_cantidadAumentoActivo.setText("");
        txt_descripcionAumentoActivo.setText("");
    }
    void llenarCmbFormaPago(){
        Conexion SIC = new Conexion();
        Connection con = SIC.conexion();
        
        String sentenciaSQL= "SELECT codigo, nombre FROM catalogo_cuentas WHERE codigo LIKE '111-01' OR codigo LIKE '111-02' OR codigo LIKE '111-03-01'";
        
        try {
            Statement statement = con.createStatement();
            ResultSet resultado = statement.executeQuery(sentenciaSQL);
            
            while (resultado.next()) {
                    Cuenta cuenta = new Cuenta();
                    cuenta.setNombre( resultado.getString("nombre") );
                    cuenta.setCodigo(resultado.getString("codigo") );
                    formaPago.add(cuenta);
                    
                    cmb_tipoPagoAumentoActivo.addItem(cuenta.getNombre());
                    
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error al llenar Tipo de Pago");
        }
    }
    
    ///METODO QUE RETORNA EL CODIGO DE LA FORMA DE PAGO SELECCIONADA
    String obtenerCodigoFormaPago(){
        String cmbSeleccionado="",codigo="";
        cmbSeleccionado = (String)cmb_tipoPagoAumentoActivo.getSelectedItem();
        
        for (Cuenta C : formaPago) {
            if(C.getNombre().equals(cmbSeleccionado)){
                codigo = C.getCodigo();
            }
        }
        return codigo;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_frmAumentoActivo;
    private javax.swing.JComboBox cmb_tipoPagoAumentoActivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txt_cantidadAumentoActivo;
    private javax.swing.JTextArea txt_descripcionAumentoActivo;
    // End of variables declaration//GEN-END:variables
}
