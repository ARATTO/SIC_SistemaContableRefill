
package interfaces.realizarTransaccion;
import conexion.Conexion;
import interfaces.Escritorio;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemacontable.*;
/**
 * @author Dario
 */
public class trn_OpcionesCompras extends javax.swing.JInternalFrame {

    public trn_OpcionesCompras() {
        initComponents();
    }
    
   
    ArrayList<Cuenta> cuentas = new ArrayList<Cuenta>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_continuarCompras = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_tipoCompra = new javax.swing.JTable();
        btn_seleccionCompra = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_cuentaCompra = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Compras");

        btn_continuarCompras.setText("Continuar");
        btn_continuarCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_continuarComprasActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_tipoCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Proveedores"},
                {"Mobiliario y Equipo"},
                {"Papeleria y Utiles"},
                {"Publicidad"},
                {"Combustibles y Lubricantes"},
                {"Rebajas y Devoluciones sobre compras"}
            },
            new String [] {
                "Transaccion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_tipoCompra);

        btn_seleccionCompra.setText(">>");
        btn_seleccionCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_seleccionCompraActionPerformed(evt);
            }
        });

        tbl_cuentaCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Cuenta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_cuentaCompra);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 751, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_seleccionCompra)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 212, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(111, 111, 111)
                            .addComponent(btn_seleccionCompra)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_continuarCompras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_continuarCompras)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_continuarComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_continuarComprasActionPerformed
        // Validar que selecciono una ROW de Cuenta
        if(tbl_cuentaCompra.getSelectedRow() != -1  ){
            frm_OpcionesCompras frm_compras = new frm_OpcionesCompras();
   
          
            int cnt = tbl_cuentaCompra.getSelectedRow();
            frm_compras.enviarCuenta(cuentas.get(cnt));
            
            Escritorio.Escritorio.add(frm_compras);
            frm_compras.setLocation(Escritorio.Escritorio.getWidth()/2-frm_compras.getWidth()/2, Escritorio.Escritorio.getHeight()/2-frm_compras.getHeight()/2);
            frm_compras.show();
        }
        else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar una Cuenta para continuar con la transaccion");
        }

    }//GEN-LAST:event_btn_continuarComprasActionPerformed

    private void btn_seleccionCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_seleccionCompraActionPerformed
        /*int fila = tbl_tipoCompra.getSelectedRow();
        String nombre = (String) tbl_tipoCompra.getValueAt(fila, 0);
        
        JOptionPane.showMessageDialog(rootPane,"Fila "+ fila+ " Contenido"+nombre);
        */
        Escritorio.limpiarTabla(tbl_cuentaCompra);
        cuentas.clear();
        int trn = tbl_tipoCompra.getSelectedRow();
        Conexion SIC = new Conexion();
        Connection con = SIC.conexion();
        
        pintarTblCuenta(trn, con);
    }//GEN-LAST:event_btn_seleccionCompraActionPerformed
    
    private void pintarTblCuenta(int trn, Connection con){
        DefaultTableModel tbl_Cuenta = (DefaultTableModel) tbl_cuentaCompra.getModel();
        
        String sentenciaSQL= "";
        switch(trn){
            case 0: //Preoveedores
                sentenciaSQL = "SELECT codigo, nombre FROM catalogo_cuentas WHERE codigo = '117-01'";
            break;
            case 1: //Bienes Inmuebles
                sentenciaSQL = "SELECT codigo, nombre FROM catalogo_cuentas WHERE codigo LIKE '121-03-%' OR codigo LIKE '121-04%'";
            break;
            case 2: //Papeleria y Utiles
                sentenciaSQL = "SELECT codigo, nombre FROM catalogo_cuentas WHERE codigo = '119-02'";
            break; 
            case 3: //Publicidad
                sentenciaSQL = "SELECT codigo, nombre FROM catalogo_cuentas WHERE codigo = '119-05'";
            break;
            case 4: //Combustibles y Lubricantes
                sentenciaSQL = "SELECT * FROM catalogo_cuentas WHERE codigo='412-10'";
            break;
            case 5: //Rebajas y Devoluciones/compra
                sentenciaSQL = "select * from catalogo_cuentas where codigo='117-06'";
            break;
        }
        
        try {
            
            Statement statement = con.createStatement();
            ResultSet resultado = statement.executeQuery(sentenciaSQL);
            
            while (resultado.next()) {
                    Cuenta cuenta = new Cuenta();
                    cuenta.setCodigo( resultado.getString("codigo") );
                    cuenta.setNombre( resultado.getString("nombre") );
                    cuentas.add(cuenta);
                    
                    tbl_Cuenta.addRow(new Object[]{cuenta.getCodigo(),cuenta.getNombre()});
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No exiten Cuentas asociadas a esta Transacion");
          }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_continuarCompras;
    private javax.swing.JButton btn_seleccionCompra;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable tbl_cuentaCompra;
    private javax.swing.JTable tbl_tipoCompra;
    // End of variables declaration//GEN-END:variables
}
