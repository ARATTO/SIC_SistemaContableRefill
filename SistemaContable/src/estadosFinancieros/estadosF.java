
package estadosFinancieros;

import conexion.Conexion;
import static interfaces.realizarTransaccion.trn_OpcionesCompras.tbl_cuentaCompra;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemacontable.Activo;
import sistemacontable.Capital;
import sistemacontable.Cuenta;
import sistemacontable.Pasivo;
import sistemacontable.SistemaContable;
import sistemacontable.Transaccion;

/**
 * @author Dario
 */
public class estadosF extends javax.swing.JInternalFrame {
    ArrayList<Cuenta> cuentas = new ArrayList<Cuenta>();
    ArrayList<Cuenta> Activo = new ArrayList<Cuenta>();
    ArrayList<Cuenta> OtrosActivos = new ArrayList<Cuenta>();
    ArrayList<Cuenta> Pasivo = new ArrayList<Cuenta>();
    ArrayList<Cuenta> Capital = new ArrayList<Cuenta>();
    ArrayList<Cuenta> Gasto = new ArrayList<Cuenta>();
    ArrayList<Cuenta> Ingreso = new ArrayList<Cuenta>();
    SistemaContable sistema = new SistemaContable();
    Conexion SIC = new Conexion();
    Connection con = SIC.conexion();
    double IV=0;
    double cv=0;
    double UB = 0;
    double GO = 0;
    double UO=0;
    double GF=0;
    double UAOI=0;
    double OI=0;
    double UAI=0;
    double I=0;
    double UN=0;
    Calendar fecha = new GregorianCalendar();
     int dia = fecha.get(Calendar.DAY_OF_MONTH);
     int m = (fecha.get(Calendar.MONTH)) + 1;
     int a単o = fecha.get(Calendar.YEAR);
     String mes="";
     
    
    public estadosF() {
        initComponents();
        BloquearInput();
        meses();
        pintarTblCuentaEstadoDeComprobacion();
        pintarEstadoDeResultado();
        PintarBalanceGeneral();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void meses(){
        switch(m){
            case 1:
                mes+="enero";
            break;
            case 2:
                mes+="febrero";
            break;
            case 3:
                mes+="marzo";
            break;
            case 4:
                mes+="abril";
            break;
            case 5:
                mes+="mayo";
            break;
            case 6:
                mes+="junio";
            break;
            case 7:
                mes+="julio";
            break;
            case 8:
                mes+="agosto";
            break;
            case 9:
                mes+="septiembre";
            break;
            case 10:
                mes+="octubre";
            break;
            case 11:
                mes+="noviembre";
            break;
            case 12:
                mes+="diciembre";
            break;
        }
    }
    
    
    private void pintarTblCuentaEstadoDeComprobacion(){
        DefaultTableModel tbl_Cuenta = (DefaultTableModel) tbl_cuerpoEstadoComprobacion.getModel();
        DefaultTableModel tbl_ResComp = (DefaultTableModel) tbl_ResultadosComprobacion.getModel();
        DefaultTableModel tbl_encabezadoEC = (DefaultTableModel) tbl_encabezadoEstadoComprobacion.getModel();
        sistema.calculoCV();
          
        
        String sentenciaSQL= "SELECT codigo, nombre, saldo, tipocuenta FROM catalogo_cuentas order by codigo asc";
            
        double debe = 0;
        double haber = 0;
        
        
        try {
            
            Statement statement = con.createStatement();
            ResultSet resultado = statement.executeQuery(sentenciaSQL);
            
            
            while (resultado.next()) {
                    Cuenta cuenta = new Cuenta();
                    cuenta.setCodigo( resultado.getString("codigo") );
                    cuenta.setNombre( resultado.getString("nombre") );
                    cuenta.setSaldo(resultado.getDouble("saldo"));
                    cuenta.setTipoCuenta(resultado.getString("tipocuenta"));
                    
                    if(cuenta.getSaldo()!= 0){
                        cuentas.add(cuenta);  
                    }
            }
           
            
            tbl_encabezadoEC.addRow(new Object[]{"REFILL S.A DE C.V"});
            tbl_encabezadoEC.addRow(new Object[]{"BALANCE DE COMPROBACION"});
            tbl_encabezadoEC.addRow(new Object[]{"DEL 1 AL "+dia+" de "+mes+" del "+a単o});
            
            for(Cuenta cuenta: cuentas){
                
                        if(cuenta.getTipoCuenta().equals("Activo") || cuenta.getTipoCuenta().equals("Gasto Operacion") || cuenta.getTipoCuenta().equals("Gasto Admin")|| cuenta.getTipoCuenta().equals("Costo")){
                            tbl_Cuenta.addRow(new Object[]{cuenta.getCodigo(),cuenta.getNombre(), cuenta.getSaldo(), 0});
                            debe +=cuenta.getSaldo();
                        }
                        else{
                            tbl_Cuenta.addRow(new Object[]{cuenta.getCodigo(),cuenta.getNombre(), 0, cuenta.getSaldo()});
                            haber +=cuenta.getSaldo();
                        }
                        
            }
            
            
            tbl_ResComp.addRow(new Object[]{"TOTAL", debe, haber});
            
         for (Cuenta c : cuentas){
             switch(c.getTipoCuenta()){
                case "Activo":                   
                        Activo.add(c);
                break;
                case "Otros Activos":
                        OtrosActivos.add(c);                   
                break;
                case "Pasivo":
                     Pasivo.add(c);
                                        
                break;
                case "Capital":
                        Capital.add(c);
                                        
                break;
                case "Gasto Operacion":
                      Gasto.add(c);

                break;
                case "Gasto Admin":
                        Gasto.add(c);                    
                break;
                case "Gasto no Operacionales":
                        Gasto.add(c);
                break;
                case "Ingresos":
                        Ingreso.add(c);
                break;
                
            }
         }
         
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No exiten Cuentas asociadas a esta Transacion");
          }
        
        }
    
    private void pintarEstadoDeResultado(){       
         DefaultTableModel tbl_encabezadoER = (DefaultTableModel) tbl_encabezadoEstadoResultado.getModel();
         
          tbl_encabezadoER.addRow(new Object[]{"REFILL S.A DE C.V"});
          tbl_encabezadoER.addRow(new Object[]{"ESTADO DE RESULTADO"});
          tbl_encabezadoER.addRow(new Object[]{"DEL 1 AL "+dia+" de "+mes+" del "+a単o});
        for(Cuenta IR: Ingreso){
            IV += IR.getSaldo();
            sistema.actualizarCuenta(IR,0);
        }
        
        txt_IngresoPorVenta.setText(String.valueOf(IV));
        
        for(Cuenta Cv: cuentas){
            if(Cv.getNombre().equals("Costo de lo vendido")){
                cv = Cv.getSaldo();
                sistema.actualizarCuenta(Cv,0);
            }
        }
        
        txt_CostoDeLoVendido.setText(String.valueOf(cv));
        
        UB = IV - cv;
        txt_UtilidadBruta.setText(String.valueOf(UB));
        
        for(Cuenta go : Gasto){
            GO+= go.getSaldo();
            sistema.actualizarCuenta(go, 0);
        }
        txt_GastoDeOperacion.setText(String.valueOf(GO));
        
        UO = UB - GO;
        
        txt_UtilidadDeOperacion.setText(String.valueOf(UO));
        
        GF = 0;
        
        txt_GastosFinancieros.setText(String.valueOf(GF));
        
        UAOI = UO - GF;
        
        txt_UtilidadAntesIngresos.setText(String.valueOf(UAOI));
        
        OI = 0;
        txt_OtrosIngresos.setText(String.valueOf(OI));
        
        UAI = UAOI +OI;
        txt_UtilidadAntesImpuestos.setText(String.valueOf(UAI));
        
        I = UAI *0.10;
        txt_Impuestos.setText(String.valueOf(I));
        Cuenta impuesto = new Pasivo();
        impuesto.setCodigo("219-01");
        sistema.actualizarCuenta(impuesto, I);
        
        UN = UAI - I;
        txt_UtilidadNeta.setText(String.valueOf(UN));
        
        Cuenta un = new Capital();
        un.setCodigo("611-01");
        sistema.actualizarCuenta(un, UN);
        
    cuentas .clear();
    Activo.clear();
    OtrosActivos.clear();
    Pasivo.clear();
    Capital.clear();
    Gasto.clear();
    Ingreso.clear();
    }
        
    public void PintarBalanceGeneral(){   
        DefaultTableModel tbl_CuentaBG = (DefaultTableModel) tbl_cuerpoBalanceGeneral.getModel();
        DefaultTableModel tbl_ResGeneral = (DefaultTableModel) tbl_ResultadoGeneral.getModel();
        DefaultTableModel tbl_encabezadoBG = (DefaultTableModel) tbl_encabezadoBalanceGeneral.getModel();
         
          tbl_encabezadoBG.addRow(new Object[]{"REFILL S.A DE C.V"});
          tbl_encabezadoBG.addRow(new Object[]{"BALANCE GENERAL"});
          tbl_encabezadoBG.addRow(new Object[]{"DEL 1 AL "+dia+" de "+mes+" del "+a単o});
        
        String sentenciaSQL= "SELECT codigo, nombre, saldo, tipocuenta FROM catalogo_cuentas order by codigo asc";
            
        double debe = 0;
        double haber = 0;
        double IVACre = 0;
        double IVADeb =0;
        double IVA =0;
        
        try {
            
            Statement statement = con.createStatement();
            ResultSet resultado = statement.executeQuery(sentenciaSQL);
            
            
            while (resultado.next()) {
                    Cuenta cuenta = new Cuenta();
                    cuenta.setCodigo( resultado.getString("codigo") );
                    cuenta.setNombre( resultado.getString("nombre") );
                    cuenta.setSaldo(resultado.getDouble("saldo"));
                    cuenta.setTipoCuenta(resultado.getString("tipocuenta"));
                    
                    if(cuenta.getSaldo()!= 0){
                        if(cuenta.getCodigo().equals("218-01")){
                            IVADeb=cuenta.getSaldo();
                        }
                        else{
                            if(cuenta.getCodigo().equals("113-01")){
                                IVACre = cuenta.getSaldo();
                            }
                            else{
                                cuentas.add(cuenta);  
                            }
                            
                        }
                        
                    }
            }
            
            if(IVACre>=IVADeb){
                Cuenta iva = new Activo();
                iva.setCodigo("219-01-05");
                iva.setNombre("IVA Percibido");
                iva.setTipoCuenta("Activo");
                IVA = IVACre - IVADeb;
                iva.setSaldo(IVA);
                sistema.actualizarCuenta(iva, IVA);
                
                cuentas.add(iva);
            }else{
                Cuenta iva = new Pasivo();
                iva.setCodigo("219-01-03");
                iva.setNombre("IVA por Pagar");
                iva.setTipoCuenta("Pasivo");
                IVA =  IVADeb -IVACre;
                iva.setSaldo(IVA);
                sistema.actualizarCuenta(iva, IVA);                
                cuentas.add(iva);
            }
            
            
            
            for (Cuenta c : cuentas){
             switch(c.getTipoCuenta()){
                case "Activo":                   
                        Activo.add(c);
                break;
                case "Otros Activos":
                        OtrosActivos.add(c);                   
                break;
                case "Pasivo":
                     Pasivo.add(c);
                                        
                break;
                case "Capital":
                        Capital.add(c);
                                        
                break;
                case "Cuenta Liquidadora":
                    Capital.add(c);
                break;
                
            }  
         }
        
       tbl_CuentaBG.addRow(new Object[]{"ACTIVOS"," ", 0, 0});
       for(Cuenta cuenta: Activo){               
                tbl_CuentaBG.addRow(new Object[]{cuenta.getCodigo(),cuenta.getNombre(), cuenta.getSaldo(), 0});
                debe +=cuenta.getSaldo();
       }
       
       for(Cuenta cuenta: OtrosActivos){
            tbl_CuentaBG.addRow(new Object[]{cuenta.getCodigo(),cuenta.getNombre(), 0, cuenta.getSaldo()});
                haber +=cuenta.getSaldo();
       }
       
       tbl_CuentaBG.addRow(new Object[]{"PASIVOS"," ", 0, 0});
       for(Cuenta cuenta: Pasivo){
            tbl_CuentaBG.addRow(new Object[]{cuenta.getCodigo(),cuenta.getNombre(), 0, cuenta.getSaldo()});
                haber +=cuenta.getSaldo();
       }
       
       tbl_CuentaBG.addRow(new Object[]{"CAPITAL"," ", 0, 0});
       for(Cuenta cuenta: Capital){
            tbl_CuentaBG.addRow(new Object[]{cuenta.getCodigo(),cuenta.getNombre(), 0, cuenta.getSaldo()});
                haber +=cuenta.getSaldo();
       }
       
       
       
       tbl_ResGeneral.addRow(new Object[]{"TOTAL", debe, haber});
    }catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No exiten Cuentas asociadas a esta Transacion");
          }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_encabezadoEstadoComprobacion = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_cuerpoEstadoComprobacion = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_ResultadosComprobacion = new javax.swing.JTable();
        jSeparator6 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_encabezadoEstadoResultado = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_IngresoPorVenta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_CostoDeLoVendido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_UtilidadBruta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_GastoDeOperacion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_UtilidadDeOperacion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_GastosFinancieros = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_UtilidadAntesIngresos = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_OtrosIngresos = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_UtilidadAntesImpuestos = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_Impuestos = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_UtilidadNeta = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_cuerpoBalanceGeneral = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_encabezadoBalanceGeneral = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbl_ResultadoGeneral = new javax.swing.JTable();
        jSeparator7 = new javax.swing.JSeparator();

        setClosable(true);
        setIconifiable(true);
        setTitle("Estados Financieros");

        tbl_encabezadoEstadoComprobacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Encabezado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_encabezadoEstadoComprobacion);

        tbl_cuerpoEstadoComprobacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Debe", "Haber"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_cuerpoEstadoComprobacion);

        tbl_ResultadosComprobacion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tbl_ResultadosComprobacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Total", "Debe", "Haber"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbl_ResultadosComprobacion);

        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jSeparator6))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("ESTADO DE COMPROBACION", jPanel1);

        tbl_encabezadoEstadoResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Encabezado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbl_encabezadoEstadoResultado);

        jLabel1.setText("Ingreso por venta");

        txt_IngresoPorVenta.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_IngresoPorVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_IngresoPorVentaActionPerformed(evt);
            }
        });

        jLabel2.setText("Costo de lo vendido");

        txt_CostoDeLoVendido.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel3.setText("Utilidad Bruta");

        txt_UtilidadBruta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_UtilidadBruta.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel4.setText("Gastos de Operacion");

        txt_GastoDeOperacion.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel5.setText("Utilidad de Operacion");

        txt_UtilidadDeOperacion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_UtilidadDeOperacion.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel6.setText("Gastos Financieros");

        txt_GastosFinancieros.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel7.setText("Utilidad antes de otros Ingresos");

        txt_UtilidadAntesIngresos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_UtilidadAntesIngresos.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel8.setText("Otros Ingresos");

        txt_OtrosIngresos.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel9.setText("Utilidad antes de Impuestos");

        txt_UtilidadAntesImpuestos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_UtilidadAntesImpuestos.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel10.setText("Impuestos");

        txt_Impuestos.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Utilidad neta");

        txt_UtilidadNeta.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_UtilidadNeta.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txt_UtilidadAntesImpuestos))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_IngresoPorVenta)
                                    .addComponent(txt_CostoDeLoVendido)
                                    .addComponent(txt_UtilidadBruta)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_GastoDeOperacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                        .addComponent(txt_UtilidadDeOperacion)
                                        .addComponent(txt_GastosFinancieros))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_UtilidadAntesIngresos, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(48, 48, 48)
                                .addComponent(txt_OtrosIngresos))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_UtilidadNeta, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addComponent(txt_Impuestos))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator5))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_IngresoPorVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_CostoDeLoVendido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_UtilidadBruta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_GastoDeOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_UtilidadDeOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_GastosFinancieros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_UtilidadAntesIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_OtrosIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_UtilidadAntesImpuestos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txt_Impuestos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(txt_UtilidadNeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("ESTADO DE RESULTADOS", jPanel2);

        tbl_cuerpoBalanceGeneral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Debe", "Haber"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tbl_cuerpoBalanceGeneral);

        tbl_encabezadoBalanceGeneral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Encabezado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tbl_encabezadoBalanceGeneral);

        tbl_ResultadoGeneral.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tbl_ResultadoGeneral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TOTAL", "Debe", "Haber"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tbl_ResultadoGeneral);

        jSeparator7.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)
                    .addComponent(jSeparator7))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        jTabbedPane1.addTab("BALANCE GENERAL", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_IngresoPorVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_IngresoPorVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_IngresoPorVentaActionPerformed
    private void BloquearInput(){
        txt_IngresoPorVenta.setEnabled(false);
        txt_CostoDeLoVendido.setEnabled(false);
        txt_UtilidadBruta.setEnabled(false);
        txt_GastoDeOperacion.setEnabled(false);
        txt_UtilidadDeOperacion.setEnabled(false);
        txt_GastosFinancieros.setEnabled(false);
        txt_UtilidadAntesIngresos.setEnabled(false);
        txt_OtrosIngresos.setEnabled(false);
        txt_UtilidadAntesImpuestos.setEnabled(false);
        txt_Impuestos.setEnabled(false);
        txt_UtilidadNeta.setEnabled(false);

    }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable tbl_ResultadoGeneral;
    public static javax.swing.JTable tbl_ResultadosComprobacion;
    public static javax.swing.JTable tbl_cuerpoBalanceGeneral;
    public static javax.swing.JTable tbl_cuerpoEstadoComprobacion;
    public static javax.swing.JTable tbl_encabezadoBalanceGeneral;
    public static javax.swing.JTable tbl_encabezadoEstadoComprobacion;
    public static javax.swing.JTable tbl_encabezadoEstadoResultado;
    public static javax.swing.JTextField txt_CostoDeLoVendido;
    public static javax.swing.JTextField txt_GastoDeOperacion;
    public static javax.swing.JTextField txt_GastosFinancieros;
    public static javax.swing.JTextField txt_Impuestos;
    public static javax.swing.JTextField txt_IngresoPorVenta;
    public static javax.swing.JTextField txt_OtrosIngresos;
    public static javax.swing.JTextField txt_UtilidadAntesImpuestos;
    public static javax.swing.JTextField txt_UtilidadAntesIngresos;
    public static javax.swing.JTextField txt_UtilidadBruta;
    public static javax.swing.JTextField txt_UtilidadDeOperacion;
    public static javax.swing.JTextField txt_UtilidadNeta;
    // End of variables declaration//GEN-END:variables
}


